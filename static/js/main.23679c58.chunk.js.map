{"version":3,"sources":["api.ts","components/Header/Header.tsx","components/Converter/Converter.tsx","App.tsx","index.tsx"],"names":["PR_API","getRate","a","fetch","response","json","Header","eurBuy","usdBuy","eurSell","usdSell","className","Converter","useState","operation","setOperation","amount","setAmount","yourSum","setYourSum","yourCurrency","setYourCurrency","changeTo","setChangeTo","name","value","onChange","event","target","type","toString","replace","placeholder","onClick","toFixed","App","usdCourseBuy","setUsdCourseBuy","usdCourseSell","setUsdCourseSell","eurCourseBuy","setEurCourseBuy","eurCourseSell","setEurCourseSell","useEffect","currentCourse","euroRate","find","item","ccy","usdRate","buy","sale","newCourse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAAMA,EAAS,mEAER,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,yBAGEA,EAASC,QAHX,4C,uCCQMC,EAA0B,SAAC,GAKjC,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEA,OACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,gBAAd,4EACA,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,qBAAb,iBACA,sBAAMA,UAAU,oBAAhB,iBACCJ,EACD,uBACA,sBAAMI,UAAU,oBAAhB,kBACCF,KAGH,sBAAKE,UAAU,eAAf,UACE,mBAAGA,UAAU,qBAAb,iBACA,sBAAMA,UAAU,oBAAhB,iBACCH,EACD,uBACA,sBAAMG,UAAU,oBAAhB,kBACCD,YCzBEE,G,MAA6B,SAAC,GAKpC,IAJLL,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEA,EAAkCG,mBAAiB,QAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAiB,GAA7C,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAiB,GAA/C,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAiB,OAAzD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAgCR,mBAAiB,OAAjD,mBAAOS,EAAP,KAAiBC,EAAjB,KAoFA,OACE,sBAAKZ,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,gDACA,yBACEa,KAAK,YACLC,MAAOX,EACPY,SAzFgB,SAACC,GACvBZ,EAAaY,EAAMC,OAAOH,QAqFtB,UAKE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,uBAIJ,gCACE,0CACA,uBACED,KAAK,QACLK,KAAK,SACLlB,UAAU,mBACVc,MAAOT,EAAOc,WAAWC,QAAQ,MAAO,IACxCL,SAAU,SAACC,GAAD,OAAWV,GAAWU,EAAMC,OAAOH,QAC7CO,YAAY,yBAIhB,sBAAKrB,UAAU,uBAAf,UACE,8CACA,yBACEa,KAAK,YACLC,MAAOL,EACPM,SA7GmB,SAACC,GAC1BN,EAAgBM,EAAMC,OAAOH,QAyGzB,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,uBAIJ,sBAAKd,UAAU,uBAAf,UACE,4CACA,yBACEa,KAAK,YACLC,MAAOH,EACPI,SAtHe,SAACC,GACtBJ,EAAYI,EAAMC,OAAOH,QAkHrB,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,uBAIJ,wBACEI,KAAK,SACLI,QA5HW,WAKf,GAJIb,IAAiBE,GACnBH,EAAWH,GAGK,SAAdF,EAAsB,CACxB,GAAqB,QAAjBM,GAAuC,QAAbE,EAG5BH,IAFYH,EAASR,GAEL0B,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,EAAST,GAEL2B,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,EAASR,GAEL0B,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,EAAST,GAEL2B,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,GAAUR,EAASD,IAEf2B,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,GAAUT,EAASC,IAEf0B,QAAQ,IAI5B,GAAkB,QAAdpB,EAAqB,CACvB,GAAqB,QAAjBM,GAAuC,QAAbE,EAG5BH,IAFYH,EAASN,GAELwB,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,EAASP,GAELyB,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,GAAUR,EAASC,IAEfyB,QAAQ,IAG1B,GAAqB,QAAjBd,GAAuC,QAAbE,EAG5BH,IAFYH,GAAUT,EAASG,IAEfwB,QAAQ,MA4DxBvB,UAAU,oBAHZ,oBAOA,mBAAGA,UAAU,oBAAb,6BACgBO,EADhB,YAC2BI,UC9JpBa,G,MAAgB,WAC3B,MAAwCtB,mBAAiB,GAAzD,mBAAOuB,EAAP,KAAqBC,EAArB,KACA,EAA0CxB,mBAAiB,GAA3D,mBAAOyB,EAAP,KAAsBC,EAAtB,KACA,EAAwC1B,mBAAiB,GAAzD,mBAAO2B,EAAP,KAAqBC,EAArB,KACA,EAA0C5B,mBAAiB,GAA3D,mBAAO6B,EAAP,KAAsBC,EAAtB,KAuBA,OArBAC,qBAAU,YACO,uCAAG,gCAAA1C,EAAA,sEACYD,IADZ,OACV4C,EADU,OAGVC,EAAWD,EAAcE,MAAK,SAAAC,GAAI,MAAiB,QAAbA,EAAKC,OAC3CC,EAAUL,EAAcE,MAAK,SAAAC,GAAI,MAAiB,QAAbA,EAAKC,OAE5CH,IACFL,GAAiBK,EAASK,KAC1BR,GAAkBG,EAASM,OAGzBF,IACFb,GAAiBa,EAAQC,KACzBZ,GAAkBW,EAAQE,OAbZ,2CAAH,qDAiBfC,KACC,IAGD,sBAAK1C,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CACEH,OAAQ4B,EACR7B,OAAQiC,EACR9B,QAAS4B,EACT7B,QAASiC,MAGb,qBAAK/B,UAAU,iBAAf,SACE,cAAC,EAAD,CACEH,OAAQ4B,EACR7B,OAAQiC,EACR9B,QAAS4B,EACT7B,QAASiC,WC3CnBY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23679c58.chunk.js","sourcesContent":["const PR_API = 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5';\n\nexport async function getRate(): Promise<Privat[]> {\n  const response = await fetch(PR_API);\n\n  return response.json();\n}\n","import React from 'react';\nimport './Header.scss';\n\ntype Props = {\n  usdBuy: number;\n  usdSell: number;\n  eurBuy: number;\n  eurSell: number;\n};\n\nexport const Header: React.FC<Props> = ({\n  eurBuy,\n  usdBuy,\n  eurSell,\n  usdSell,\n}) => {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header__title\">Курс гривны:</h1>\n      <div className=\"header__rates\">\n        <div className=\"header__span\">\n          <p className=\"header__span-title\">EUR</p>\n          <span className=\"header__operation\">BAY</span>\n          {eurBuy}\n          <br />\n          <span className=\"header__operation\">SALE</span>\n          {eurSell}\n        </div>\n\n        <div className=\"header__span\">\n          <p className=\"header__span-title\">USD</p>\n          <span className=\"header__operation\">BAY</span>\n          {usdBuy}\n          <br />\n          <span className=\"header__operation\">SALE</span>\n          {usdSell}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './Converter.scss';\n\ntype Props = {\n  usdBuy: number;\n  usdSell: number;\n  eurBuy: number;\n  eurSell: number;\n};\n\nexport const Converter: React.FC<Props> = ({\n  eurBuy,\n  usdBuy,\n  eurSell,\n  usdSell,\n}) => {\n  const [operation, setOperation] = useState<string>('sale');\n  const [amount, setAmount] = useState<number>(0);\n  const [yourSum, setYourSum] = useState<number>(0);\n  const [yourCurrency, setYourCurrency] = useState<string>('UAH');\n  const [changeTo, setChangeTo] = useState<string>('USD');\n\n  const changeOperation = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOperation(event.target.value);\n  };\n\n  const chooseYourCurrency = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setYourCurrency(event.target.value);\n  };\n\n  const chooseChangeTo = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setChangeTo(event.target.value);\n  };\n\n  const countSum = () => {\n    if (yourCurrency === changeTo) {\n      setYourSum(amount);\n    }\n\n    if (operation === 'sale') {\n      if (yourCurrency === 'UAH' && changeTo === 'USD') {\n        const sum = amount / usdBuy;\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'UAH' && changeTo === 'EUR') {\n        const sum = amount / eurBuy;\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'USD' && changeTo === 'UAH') {\n        const sum = amount * usdBuy;\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'EUR' && changeTo === 'UAH') {\n        const sum = amount * eurBuy;\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'USD' && changeTo === 'EUR') {\n        const sum = amount * (usdBuy / eurBuy);\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'EUR' && changeTo === 'USD') {\n        const sum = amount * (eurBuy / usdBuy);\n\n        setYourSum(+sum.toFixed(2));\n      }\n    }\n\n    if (operation === 'buy') {\n      if (yourCurrency === 'UAH' && changeTo === 'USD') {\n        const sum = amount / usdSell;\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'UAH' && changeTo === 'EUR') {\n        const sum = amount / eurSell;\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'USD' && changeTo === 'EUR') {\n        const sum = amount * (usdBuy / eurSell);\n\n        setYourSum(+sum.toFixed(2));\n      }\n\n      if (yourCurrency === 'EUR' && changeTo === 'USD') {\n        const sum = amount * (eurBuy / usdSell);\n\n        setYourSum(+sum.toFixed(2));\n      }\n    }\n  };\n\n  return (\n    <div className=\"converter\">\n      <div className=\"converter__operation\">\n        <h2>Your operation</h2>\n        <select\n          name=\"operation\"\n          value={operation}\n          onChange={changeOperation}\n        >\n          <option value=\"sale\">sale</option>\n          <option value=\"buy\">buy</option>\n        </select>\n      </div>\n\n      <div>\n        <h2>Your Sum</h2>\n        <input\n          name=\"input\"\n          type=\"number\"\n          className=\"converter__input\"\n          value={amount.toString().replace(/^0+/, '')}\n          onChange={(event) => setAmount(+event.target.value)}\n          placeholder=\"write your amount\"\n        />\n      </div>\n\n      <div className=\"converter__operation\">\n        <h2>Change from:</h2>\n        <select\n          name=\"operation\"\n          value={yourCurrency}\n          onChange={chooseYourCurrency}\n        >\n          <option value=\"UAH\">UAH</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"EUR\">EUR</option>\n        </select>\n      </div>\n\n      <div className=\"converter__operation\">\n        <h2>Change to:</h2>\n        <select\n          name=\"operation\"\n          value={changeTo}\n          onChange={chooseChangeTo}\n        >\n          <option value=\"UAH\">UAH</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"EUR\">EUR</option>\n        </select>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={countSum}\n        className=\"converter__button\"\n      >\n        Change\n      </button>\n      <p className=\"converter__output\">\n        {`Your sum: ${yourSum} ${changeTo}`}\n      </p>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getRate } from './api';\nimport { Header } from './components/Header/Header';\nimport { Converter } from './components/Converter/Converter';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [usdCourseBuy, setUsdCourseBuy] = useState<number>(0);\n  const [usdCourseSell, setUsdCourseSell] = useState<number>(0);\n  const [eurCourseBuy, setEurCourseBuy] = useState<number>(0);\n  const [eurCourseSell, setEurCourseSell] = useState<number>(0);\n\n  useEffect(() => {\n    const newCourse = async () => {\n      const currentCourse = await getRate();\n\n      const euroRate = currentCourse.find(item => item.ccy === 'EUR');\n      const usdRate = currentCourse.find(item => item.ccy === 'USD');\n\n      if (euroRate) {\n        setEurCourseBuy(+euroRate.buy);\n        setEurCourseSell(+euroRate.sale);\n      }\n\n      if (usdRate) {\n        setUsdCourseBuy(+usdRate.buy);\n        setUsdCourseSell(+usdRate.sale);\n      }\n    };\n\n    newCourse();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <Header\n          usdBuy={usdCourseBuy}\n          eurBuy={eurCourseBuy}\n          usdSell={usdCourseSell}\n          eurSell={eurCourseSell}\n        />\n      </div>\n      <div className=\"app__converter\">\n        <Converter\n          usdBuy={usdCourseBuy}\n          eurBuy={eurCourseBuy}\n          usdSell={usdCourseSell}\n          eurSell={eurCourseSell}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}